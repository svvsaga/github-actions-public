name: Setup GCloud with workload identity
description: Setup Workload Identity Federation and GCloud SDK. Code must be checked out first, to set Google application credentials.

inputs:
  project_id:
    description: The project ID of the workload identity project to use with `gcloud`. Will be used to set the `<service_account>@<project_id>.iam.gserviceaccount.com` service account. If not set, `environment` and `app_root` must be set and `projects.config.json` must be present.
    required: false
  project_number:
    description: The project number of the project where the workload identity provider exists. Will be used to set workload identity provider to `projects/<project_number>/locations/global/workloadIdentityPools/<pool_id>/providers/<provider_id>`. If not set, `environment` and `app_root` must be set and `projects.config.json` must be present.
    required: false
  environment:
    description: The environment to use for finding the project ID and workload identity provider. If not set, `project_id` and `project_number` must be set.
    required: false
  app_root:
    description: The root directory to use for searching for `projects.config.json`. If not set, `project_id` and `project_number` must be set.
    required: false
  service_account:
    description: The service account to use with `gcloud`. Defaults to `terraform`.
    required: false
    default: terraform
  pool_id:
    description: The pool ID of the workload identity pool to use with `gcloud`. Defaults to `default`.
    required: false
    default: default
  provider_id:
    description: The provider ID of the workload identity provider to use with `gcloud`. Defaults to `github`.
    required: false
    default: github

runs:
  using: composite
  steps:
    - name: Verify that the code has been checked out
      working-directory: .
      shell: bash
      run: |
        if [ ! -d .git ]; then
          echo "ERROR: Code must be checked out first"
          exit 1
        fi

    - name: Check inputs
      working-directory: .
      shell: bash
      run: |
        if [[ -z "${{ inputs.project_id }}" || -z "${{ inputs.project_number }}" ]] && [[ -z "${{ inputs.environment }}" || -z "${{ inputs.app_root }}" ]]; then
          echo "ERROR: Either project_id and project_number must be set, or environment and app_root must be set"
          exit 1
        fi

    - name: Read project config
      id: read_project_config
      if: ${{ !inputs.project_id }}
      uses: svvsaga/github-actions-public/read-project-config@v19.0.1
      with:
        cwd: ${{ inputs.app_root }}

    - name: Check project ID and number
      working-directory: .
      shell: bash
      if: ${{ !(inputs.project_id && inputs.project_number) }}
      env:
        PROJECT_ID: ${{ !(inputs.project_id && inputs.project_number) && fromJson(steps.read_project_config.outputs.project_ids_by_environment)[inputs.environment] }}
        PROJECT_NUMBER: ${{ !(inputs.project_id && inputs.project_number) && fromJson(steps.read_project_config.outputs.project_numbers_by_environment)[inputs.environment] }}
      run: |
        if [ -z "$PROJECT_ID" ]; then
          echo "ERROR: Project ID not found for environment '${{ inputs.environment }}'"
          exit 1
        fi
        
        if [ -z "$PROJECT_NUMBER" ]; then
          echo "ERROR: Project number not found for environment '${{ inputs.environment }}'"
          exit 1
        fi

    - name: Authenticate to Google Cloud with Terraform service account
      id: auth
      uses: google-github-actions/auth@v0
      env:
        PROJECT_ID: ${{ inputs.project_id || fromJson(steps.read_project_config.outputs.project_ids_by_environment)[inputs.environment] }}
        PROJECT_NUMBER: ${{ inputs.project_number || fromJson(steps.read_project_config.outputs.project_numbers_by_environment)[inputs.environment] }}
      with:
        workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ inputs.pool_id }}/providers/${{ inputs.provider_id }}
        service_account: ${{ inputs.service_account }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
        token_format: access_token

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0

outputs:
  credentials_file_path:
    description: The path to the credentials file used by `gcloud` to authenticate with the Workload Identity provider.
    value: ${{ steps.auth.outputs.credentials_file_path }}
  access_token:
    description: The access token to use with `gcloud`
    value: ${{ steps.auth.outputs.access_token }}
