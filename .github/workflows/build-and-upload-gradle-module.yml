name: Build and upload Gradle module

on:
  workflow_call:
    inputs:
      storage_bucket:
        description: GCS storage bucket where gradle module should be uploaded. If not set, attempts to use project ID from `projects.config.json` in shared_project_config_root.
        type: string
        required: false
      app_root:
        description: Path to source code project from root of Git repo
        type: string
        required: true
      destination_path:
        description: Path within storage bucket where to upload artifact. Defaults to `app_root`.
        type: string
        required: false
        default: ""
      version_property:
        description: Project property used to set app version
        required: false
        type: string
        default: appVersion
      app_version:
        description: Will set the app version of the JAR to be built and published
        required: false
        type: string
        default: ${{ github.run_number }}
      ref:
        description: Which ref to create release for. Defaults to same as workflow is run from if empty.
        required: false
        type: string
        default: ${{ github.sha }}
      gradlew_path:
        description: Relative path to the gradle wrapper. Defaults to `../gradlew`.
        type: string
        required: false
        default: ../gradlew
      publish_glob:
        description: Glob pattern to match artifacts to publish. Defaults to `*.zip`.
        type: string
        required: false
        default: "*.zip"
      shared_project_config_root:
        description: Relative path to the shared project config root (where the projects.config.json for the team shared project can be found). Defaults to repo root.
        type: string
        required: false
        default: "."
    secrets:
      storage_bucket_sa_publisher_key:
        description: Service account key used to publish JAR to artifact bucket. If not set, attempts to use Workload Identity Federation with shared project ID from `projects.config.json` in shared_project_config_root.
        required: false

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REF: ${{ github.inputs.ref }}

permissions:
  contents: read
  id-token: write

jobs:
  build_module:
    name: Build module and publish
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.app_root }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.REF }}

      - name: Read shared project config
        id: read_shared_config
        uses: svvsaga/github-actions-public/read-project-config@v20.1.1
        with:
          cwd: ${{ inputs.shared_project_config_root }}

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Build deployable
        run: ${{ inputs.gradlew_path }} shadowJar -P${{ inputs.version_property }}=${{ inputs.app_version }}

      - name: Zip jars
        run: find . -type f -name "*.jar" -exec bash -c 'zip -j `basename {}`.zip {}' \;

      - name: Setup Google Cloud SDK
        uses: svvsaga/github-actions-public/setup-gcloud@v22.3.1
        with:
          app_root: ${{ inputs.shared_project_config_root }}
          environment: SHARED
          service_account_key: ${{ secrets.storage_bucket_sa_publisher_key }}

      - name: Publish to GCS
        uses: google-github-actions/upload-cloud-storage@v0
        env:
          ARTIFACT_BUCKET: ${{ inputs.storage_bucket || format('{0}-artifacts', fromJson(steps.read_shared_config.outputs.project_ids_by_environment).SHARED) }}
          ARTIFACT_PREFIX: ${{ inputs.destination_path || inputs.app_root }}
        with:
          path: ${{ inputs.app_root }}
          destination: ${{ env.ARTIFACT_BUCKET }}/${{ env.ARTIFACT_PREFIX }}
          glob: ${{ inputs.publish_glob }}
          parent: false
          gzip: false
