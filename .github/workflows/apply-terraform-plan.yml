name: Apply Terraform plan
on:
  workflow_call:
    inputs:
      ref:
        description: Which release to deploy, e.g. "datacatalog-web-v13"
        required: true
        type: string
      environment:
        description: Which environment to deploy to (e.g. STM, ATM or PROD).
        type: string
        required: true
      skip_diff:
        required: false
        type: string
        description: Set to 'true' to apply Terraform plan without checking if state has changed since plan was created.
      app_root:
        description: Path to source code project from root of Git repo
        type: string
        required: true
      storage_bucket:
        description: GCP Storage bucket where Terraform plans are stored (tries to use projects.config.json if not set)
        type: string
        required: false
      application_name:
        description: Name of application, e.g. Reisetid - Ingest
        type: string
        required: true
    secrets:
      service_account_key:
        description: SA key for service account used to deploy plan. If not set, attempts to use workload identity federation from projects.config.json.
        required: false
      github_app_private_key:
        description: Private key for GitHub application to get app token
        required: true
      github_app_id:
        description: GitHub application ID to get app token
        required: true

jobs:
  deploy:
    permissions:
      contents: read
      id-token: write
      deployments: write
    name: Deploy infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}

      - name: Read project config
        id: read_config
        uses: svvsaga/github-actions-public/read-project-config@v17.2.3
        with:
          cwd: ${{ inputs.app_root }}

      - name: Setup Google Cloud SDK
        uses: svvsaga/github-actions-public/setup-gcloud@v17.2.3
        with:
          service_account_key: ${{ secrets.service_account_key }}
          app_root: ${{ inputs.app_root }}
          environment: ${{ inputs.environment }}

      - name: Get app token
        id: get_token
        uses: tibdex/github-app-token@021a2405c7f990db57f5eae5397423dcc554159c
        with:
          private_key: ${{ secrets.github_app_private_key }}
          app_id: ${{ secrets.github_app_id }}

      - name: Set GitHub token
        run: |
          git config --global url."https://x-access-token:${{ steps.get_token.outputs.token }}@github.com".insteadOf https://github.com
          echo "GITHUB_TOKEN=${{ steps.get_token.outputs.token }}" >> $GITHUB_ENV

      - name: Deploy plan for ${{ inputs.environment }}
        uses: svvsaga/github-actions-public/apply-terraform-plan-from-gcs@v17.2.3
        with:
          environment: ${{ inputs.environment }}
          project_root: ${{ inputs.app_root }}
          storage_bucket: ${{ inputs.storage_bucket || format('svv-{0}', fromJson(steps.read_config.outputs.project_ids_by_environment)[inputs.environment]) }}
          application: ${{ inputs.application_name }}
          github_token: ${{ github.token }}
          skip_diff: ${{ inputs.skip_diff }}
